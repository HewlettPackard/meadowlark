/*
 *  (c) Copyright 2016-2017, 2021 Hewlett Packard Enterprise Development Company LP.
 *
 *  This software is available to you under a choice of one of two
 *  licenses. You may choose to be licensed under the terms of the
 *  GNU Lesser General Public License Version 3, or (at your option)
 *  later with exceptions included below, or under the terms of the
 *  MIT license (Expat) available in COPYING file in the source tree.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 *  As an exception, the copyright holders of this Library grant you permission
 *  to (i) compile an Application with the Library, and (ii) distribute the
 *  Application containing code generated by the Library and added to the
 *  Application during this compilation process under terms of your choice,
 *  provided you also meet the terms and conditions of the Application license.
 *
 */

#ifndef SPLIT_ORDERED_METRICS_H
#define SPLIT_ORDERED_METRICS_H

#include "kvs_metrics.h"

namespace radixtree {

#ifdef METRICS

class SplitOrderedMetrics: public KVSMetrics {
public:
    SplitOrderedMetrics(KVSMetricsConfig& config)
        : KVSMetrics(config) 
    { 
        int ret = Init();
        assert(ret == 0);
    }

    int Init()
    {
        pointer_traversal_ = &registry_.NewHistogram({"kvs", "split_ordered", "pointer_traversal"});
        return 0;
    }

public:
    medida::Histogram* pointer_traversal_;
};

#else // METRICS

class SplitOrderedMetrics: public KVSMetrics {
public:
    SplitOrderedMetrics(KVSMetricsConfig& config)
        : KVSMetrics(config) 
    { 
    }

    int Init()
    {
        /* do nothing */
        return 0;
    }
};

#endif

} // namespace radixtree

#endif
